name: Node.js CI

on:
    pull_request:
        branches: ['main']
    push:
        branches: ['main']
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [16.x]
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
            - run: npm ci
            - run: npm run test-ci
            - name: Upload Test Coverage
              uses: actions/upload-artifact@v2
              with:
                  name: TestCoverage
                  path: coverage
                  retention-days: 1
            - run: npm run build:gitHubPage
              if: github.ref == 'refs/heads/main'
            - name: Deploy to GitHub Pages
              if: github.ref == 'refs/heads/main'
              uses: JamesIves/github-pages-deploy-action@4.1.5
              with:
                branch: gh-pages
                folder: dist/RonWeb/browser
                token: ${{ secrets.TOKEN }}
            - name: Docker Build
              if: github.ref == 'refs/heads/main'
              run: |
                  docker build -t ${{ secrets.DOCKER_USER }}/ron-web . --no-cache
                  docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PWD }}
            - name: Docker Push
              if: github.ref == 'refs/heads/main'
              run: |
                  docker push ${{ secrets.DOCKER_USER }}/ron-web
            - name: SSH into server and deploy
              if: github.ref == 'refs/heads/main'
              uses: appleboy/ssh-action@v0.1.10
              with:
                host: ${{ secrets.SCP_HOST }}
                username: ${{  secrets.SCP_USER }}
                password: ${{ secrets.SCP_PWD }}
                script: |
                  docker stop ron-web || true && \
                  docker rm ron-web || true && \
                  docker pull ${{ secrets.DOCKER_USER }}/ron-web:latest && \
                  docker run -d -p 83:80 --name ron-web --restart=always \
                    -e PORT=80 \
                    ${{ secrets.DOCKER_USER }}/ron-web:latest
